<!--
The MIT License

Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<!--
  User self sign up page.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:x="jelly:xml">
  <l:view xmlns:l="/lib/layout" contentType="text/html;charset=UTF-8">
    <st:setHeader name="Expires" value="0"/>
    <st:setHeader name="Cache-Control" value="no-cache,no-store,must-revalidate"/>
    <!--
    needed to generate a session if non exists,
    without it we would add ";jsessionid=" to the url which will result in a 404
    -->
    <j:set var="_" value="${request.getSession()}"/>
    <x:doctype name="html"/>
    <!-- in case of error we want to surround the form elements with an error hint -->
    <j:set var="inputClass" value="${data.errorMessage!=null ? 'jenkins-input--error' : ''}"/>
    <j:set var="simpleDecorator" value="${h.simplePageDecorator}"/>
    <j:set var="simpleDecorators" value="${h.simplePageDecorators}"/>
    <html lang="${request.getLocale().toLanguageTag()}">
      <head data-rooturl="${rootURL}" data-resurl="${resURL}" data-imagesurl="${imagesURL}" resURL="${resURL}">
        <title>${%Register} [Jenkins]</title>
        <!-- we do not want bots on this page -->
        <meta name="ROBOTS" content="NOFOLLOW"/>
        <!-- mobile friendly layout -->
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <!-- css styling, will fallback to default implementation -->
        <st:include it="${simpleDecorator}" page="simple-head.jelly" optional="true"/>
        <link rel="stylesheet" href="${resURL}/css/signup.css" type="text/css"/>
      </head>
      <body class="app-sign-in-register">
        <div class="app-sign-in-register__branding">
          <div class="app-sign-in-register__branding__starburst"></div>
          <img src="${imagesURL}/svgs/logo.svg" alt="${%logo}"/>
        </div>
        <main class="app-sign-in-register__content">
          <div class="app-sign-in-register__content-inner">
            <h1>${%Register}</h1>
            <form class="signup" action="${rootURL}/securityRealm/createAccount" method="post">
              <div>
                <label class="longhornlabel ${data.errors.containsKey('username') ? 'alert' : ''}"
                        for="username"
                >
                  ${%Username}
                </label>
                <div class="app-sign-in-register__error">
                  ${data.errors.containsKey('username') ? data.errors.get('username') : ''}
                </div>
                <input
                        class="jenkins-input ${data.errors.containsKey('username') ? 'jenkins-input--error' : ''}"
                        value="${data.username}"
                        type="text"
                        name="username"
                        id="username"
                />
              </div>
              <div>
                <label
                        class="longhornlabel ${data.errors.containsKey('fullname') ? 'alert' : ''}"
                        for="fullname"
                >
                  ${%Full name}
                </label>
                <div class="app-sign-in-register__error">
                  ${data.errors.containsKey('fullname') ? data.errors.get('fullname') : ''}
                </div>
                <input
                        class="jenkins-input ${data.errors.containsKey('fullname') ? 'jenkins-input--error' : ''}"
                        value="${data.fullname}"
                        type="text"
                        name="fullname"
                        id="fullname"
                />
              </div>
              <j:if test="${it.mailerPluginPresent}">
                <div>
                  <label
                          class="longhornlabel ${data.errors.containsKey('email') ? 'alert' : ''}"
                          for="email"
                  >
                    ${%Email}
                  </label>
                  <div class="app-sign-in-register__error">
                    ${data.errors.containsKey('email') ? data.errors.get('email') : ''}
                  </div>
                  <input
                          class="jenkins-input ${data.errors.containsKey('email') ? 'jenkins-input--error' : ''}"
                          value="${data.email}"
                          type="text"
                          name="email"
                          id="email"
                  />
                </div>
              </j:if>
              <j:if test="${it.isEnableCaptcha()}">
                <div>
                  <label
                          class="longhornlabel ${data.errors.containsKey('captcha') ? 'alert' : ''}"
                          for="captcha"
                  >${%Enter text as shown}
                  </label>
                  <input
                          class="${data.errors.containsKey('captcha') ? 'jenkins-input--error' : ''}"
                          type="text"
                          name="captcha"
                          id="captcha"
                          autocomplete="off"
                  />
                  <img src="${rootURL}/securityRealm/captcha" alt="[captcha]"/>
                </div>
              </j:if>
              <div>
                <div class="inputHeader password">
                  <label
                          class="longhornlabel ${data.errors.containsKey('password1') ? 'alert' : ''}"
                          for="password1"
                  >
                    ${%Password}
                  </label>
                  <div class="jenkins-checkbox">
                    <input
                            type="checkbox"
                            id="showPassword"
                            onClick="togglePasswordType(this)"
                            name="remember_me"
                    />
                    <label for="showPassword">${%Show}</label>
                  </div>
                </div>
                <div class="app-sign-in-register__error">
                  ${data.errors.containsKey('password1') ? data.errors.get('password1') : ''}
                </div>
                <input
                        onKeyUp="validatePassword()"
                        class="jenkins-input ${data.errors.containsKey('password1') ? 'jenkins-input--error' : ''}"
                        value="${data.password1}"
                        type="password"
                        name="password1"
                        id="password1"
                />
                <script type="text/javascript">
                  const togglePasswordType = function (event) {
                    const passwordField = document.getElementById('password1');
                    const showPass = document.getElementById('showPassword');
                    if (showPass.checked) {
                      passwordField.type = 'text';
                    } else {
                      passwordField.type = 'password';
                    }
                  };

                  const passwordScore = function (password) {
                    var score = 0;
                    if (!password) {
                      return score
                    }
                    // award every unique letter until 5 repetitions
                    var letters = {};
                    for (var i = 0; i &lt; password.length; i++) {
                      letters[password[i]] = (letters[password[i]] || 0) + 1
                      score += 5.0 / letters[password[i]]
                    }

                    // bonus points for mixing it up
                    var variations = {
                      digits: /\d/.test(password),
                      lower: /[a-z]/.test(password),
                      upper: /[A-Z]/.test(password),
                      nonWords: /\W/.test(password)
                    };

                    var variationCount = 0;
                    for (var check in variations) {
                      variationCount += variations[check] === true ? 1 : 0;
                    }
                    score += (variationCount - 1) * 10;
                    return parseInt(score);
                  };

                  const passwordStrength = function (score) {
                    if (score > 80) {
                      return "${%Strong}";
                    }
                    if (score > 60) {
                      return "${%Moderate}";
                    }
                    if (score >= 30) {
                      return "${%Weak}";
                    }
                    return "${%Poor}";
                  };

                  const passwordStrengthColor = function (score) {
                    if (score > 80) {
                      return "var(--green)"
                    }
                    if (score > 60) {
                      return "var(--yellow)"
                    }
                    if (score >= 30) {
                      return "var(--orange)"
                    }
                    return "var(--error-color)"
                  };

                  const validatePassword = function () {
                    const password = document.getElementById('password1');
                    if (password) {
                      const passwordStrengthWrapper =
                              document.getElementById('passwordStrengthWrapper');
                      passwordStrengthWrapper.hidden = false;
                      const score = passwordScore(password.value);
                      const passwordStrengthIndicator = document.getElementById('passwordStrength');
                      passwordStrengthIndicator.innerText = passwordStrength(score);
                      passwordStrengthIndicator.setAttribute('style', 'color: ' +
                              passwordStrengthColor(score));
                      document.getElementById('password2').value = password.value;
                    }
                  }
                </script>
                <div id="passwordStrengthWrapper">${%Strength}: <span id="passwordStrength">&#160;
                </span>
                </div>
                <script type="text/javascript">
                  if (document.getElementById('passwordStrengthWrapper')) {
                    document.getElementById('passwordStrengthWrapper').hidden = true;
                  }
                </script>

              </div>
              <div class="app-sign-in-register__password-notice">
                ${%A strong password is a long password that's unique for every site. Try using a phrase with 5-6 words for the best security.}
              </div>
              <input class="${data.errors.containsKey('password1') ? 'jenkins-input--error' : ''}"
                      value="${data.password2}"
                      type="hidden"
                      name="password2"
                      id="password2"
              />
              <button type="submit"
                      name="Submit"
                      class="jenkins-button jenkins-button--primary">
                ${%Create account}
              </button>
              <input type="hidden" name="${h.getCrumbRequestField()}" value="${h.getCrumb(request)}"/>
              <j:if test="${data.errorField != null}">
                <script type="text/javascript">
                  const errorField = document.getElementById('${data.errorField}');
                  if (errorField &amp;&amp; errorField.focus) {
                    errorField.focus();
                  }
                </script>
              </j:if>
              <div class="footer">
                <j:forEach var="decorator" items="${simpleDecorators}">
                  <st:include it="${decorator}" page="simple-footer.jelly" optional="true"/>
                </j:forEach>
              </div>
            </form>
          </div>
        </main>
      </body>
    </html>
  </l:view>
</j:jelly>
