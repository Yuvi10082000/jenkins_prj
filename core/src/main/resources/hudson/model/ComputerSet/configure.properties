
nodeMonitorCallbacks=Node Monitor Callbacks
nodeMonitorCallbacks.description=Node monitor callbacks allows to execute groovy code defined by administrator. \
  It helps to automate tasks when Node Monitor <strong>change</strong> the node state. \
  Ex: Start clean-up job for node, when no more space left, or send mail notification to admin-group ... \
  <br>Following callbacks are possible: \
   <li> <strong>On-Online</strong> change. This callback will be executed, when the node monitor marks the node online. \
   <li> <strong>On-Offline</strong> change This callback will be executed, when the node monitor marks the node offline. \
  <br><strong>Executor node</strong> is the node name, where shall be callback executed. \
  The default node is \u2018(built-in)\u2018 node (master). \
  Empty executor node means, tha callback is deactivated and code will be not executed. \
  <br>Keep in mind that <code>Jenkins.instance</code> is accessible only on \u2018(built-in)\u2018 node.\
  <br><strong>Callback script</strong> is an arbitrary <a href="https://www.groovy-lang.org">Groovy script</a>.\
  To identify what happens on which node are following variables predefined: \
  <li><code>String nodeName</code> The node name where the changes happens. Empty String means \u2018(built-in)\u2018 (master) node. \
  <li><code>String monitorName</code> Human readable name of the node-monitor. \
  <li><code>String monitorClass</code> Class name of the node-monitor.\
  <li><code>String offlineCauseText</code> Offline cause text. This is the cause, why the node-monitor mark node offline. \
      This variable is defined only in case of \u2018On-Offline\u2018 change.